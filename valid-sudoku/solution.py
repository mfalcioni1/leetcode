from typing import List
class Solution:
    def isValidSudoku(self, board: List[List[str]]) -> bool:
        # decompose board
        r = [[] for _ in range(9)]
        c = [[] for _ in range(9)]
        g = [[] for _ in range(9)]
        for i in range(len(board)): #row
            for j in range(len(board)): #column
                if board[i][j] != ".":
                    if board[i][j] not in r[i]:
                        r[i].append(board[i][j])
                    else:
                        return False
                    if board[i][j] not in c[j]:
                        c[j].append(board[i][j])
                    else:
                        return False
                    if board[i][j] not in g[(i // 3)*3 + j // 3]:
                        g[(i // 3)*3 + j // 3].append(board[i][j])
                    else:
                        return False
        return True

'''
mat_1 = 0,2 c; 0,2 r
mat_2 = 0,2 c; 3,5 r
mat_3 = 0,2 c; 6,8 r
mat_4 = 3,5 c; 0,2 r
mat_5 = 3,5 c; 3,5 r
mat_6 = 3,5 c; 6,8 r
'''

sol = Solution()

board = [["5","3",".",".","7",".",".",".","."]
,["6",".",".","1","9","5",".",".","."]
,[".","9","8",".",".",".",".","6","."]
,["8",".",".",".","6",".",".",".","3"]
,["4",".",".","8",".","3",".",".","1"]
,["7",".",".",".","2",".",".",".","6"]
,[".","6",".",".",".",".","2","8","."]
,[".",".",".","4","1","9",".",".","5"]
,[".",".",".",".","8",".",".","7","9"]]

sol.isValidSudoku(board)

board = [["8","3",".",".","7",".",".",".","."]
,["6",".",".","1","9","5",".",".","."]
,[".","9","8",".",".",".",".","6","."]
,["8",".",".",".","6",".",".",".","3"]
,["4",".",".","8",".","3",".",".","1"]
,["7",".",".",".","2",".",".",".","6"]
,[".","6",".",".",".",".","2","8","."]
,[".",".",".","4","1","9",".",".","5"]
,[".",".",".",".","8",".",".","7","9"]]

sol.isValidSudoku(board)

board = [["5","3",".",".","7",".",".",".","."]
,["6",".",".","1","9","5",".",".","."]
,[".","9","8",".",".",".",".","6","."]
,["8",".",".",".","6",".",".",".","3"]
,["4",".",".","8",".","3",".",".","1"]
,["7",".",".",".","2",".",".",".","6"]
,[".","6",".",".",".",".","2","8","."]
,[".",".",".","4","1","9",".","9","5"]
,[".",".",".",".","8",".",".","7","9"]]

sol.isValidSudoku(board)